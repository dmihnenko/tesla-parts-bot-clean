import 'dotenv/config';
import { initializeApp, cert } from 'firebase-admin/app';
import { getFirestore, FieldValue } from 'firebase-admin/firestore';

const FIREBASE_SERVICE_ACCOUNT_KEY = process.env.FIREBASE_SERVICE_ACCOUNT_KEY;

if (!FIREBASE_SERVICE_ACCOUNT_KEY) {
  console.error('‚ùå FIREBASE_SERVICE_ACCOUNT_KEY not found in environment variables');
  process.exit(1);
}

try {
  const serviceAccount = JSON.parse(FIREBASE_SERVICE_ACCOUNT_KEY);

  initializeApp({
    credential: cert(serviceAccount),
    projectId: serviceAccount.project_id
  });

  const db = getFirestore();
  console.log('‚úÖ Firebase Admin SDK initialized');

  const newPlaceholderUrl = 'https://www.pngfind.com/pngs/m/24-245028_tesla-logo-tesla-motors-hd-png-download.png';

  async function updateExistingProducts() {
    console.log('üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤...');

    try {
      const snapshot = await db.collection('parts').get();

      if (snapshot.empty) {
        console.log('üì≠ –ù–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è');
        return;
      }

      let updatedCount = 0;

      for (const doc of snapshot.docs) {
        const product = doc.data();
        const currentPhotoUrls = product.photoUrls || [];

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ via.placeholder.com –≤ photoUrls
        const hasOldPlaceholder = currentPhotoUrls.some(url =>
          url && url.includes('via.placeholder.com')
        );

        if (hasOldPlaceholder) {
          // –ó–∞–º–µ–Ω—è–µ–º –≤—Å–µ —Å—Ç–∞—Ä—ã–µ placeholder'—ã –Ω–∞ –Ω–æ–≤—ã–π
          const updatedPhotoUrls = currentPhotoUrls.map(url =>
            url && url.includes('via.placeholder.com') ? newPlaceholderUrl : url
          );

          await doc.ref.update({
            photoUrls: updatedPhotoUrls,
            updatedAt: FieldValue.serverTimestamp()
          });

          console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω —Ç–æ–≤–∞—Ä: ${product.name} (ID: ${doc.id})`);
          updatedCount++;
        }
      }

      console.log(`üéâ –û–±–Ω–æ–≤–ª–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: ${updatedCount}`);
      console.log(`üìä –í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –±–∞–∑–µ: ${snapshot.size}`);

    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤:', error);
    }
  }

  updateExistingProducts().then(() => {
    console.log('üèÅ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
    process.exit(0);
  }).catch((error) => {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
    process.exit(1);
  });

} catch (error) {
  console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error);
  process.exit(1);
}