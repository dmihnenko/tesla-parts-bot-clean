// –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
require('dotenv').config();

const functions = require('firebase-functions');
const TelegramBot = require('node-telegram-bot-api');
const admin = require('firebase-admin');

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Firebase Admin SDK
admin.initializeApp();

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
const TELEGRAM_BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;

if (!TELEGRAM_BOT_TOKEN) {
  console.error('TELEGRAM_BOT_TOKEN not configured');
  throw new Error('TELEGRAM_BOT_TOKEN is required');
}

// –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –±–æ—Ç–∞ —Å polling
const bot = new TelegramBot(TELEGRAM_BOT_TOKEN, { polling: true });

// –ü–æ–ª—É—á–µ–Ω–∏–µ Firestore
const db = admin.firestore();

// –ü—Ä–æ—Å—Ç–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥
bot.onText(/\/start/, (msg) => {
  const chatId = msg.chat.id;
  bot.sendMessage(chatId, 'ü§ñ –ü—Ä–∏–≤–µ—Ç! –Ø —Ä–∞–±–æ—Ç–∞—é –Ω–∞ Firebase Functions!\n\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏.');
});

bot.onText(/\/help/, (msg) => {
  const chatId = msg.chat.id;
  bot.sendMessage(chatId, 'üìã *–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*\n/start - –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞\n/help - –°–ø—Ä–∞–≤–∫–∞\n/status - –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã', { parse_mode: 'Markdown' });
});

bot.onText(/\/status/, async (msg) => {
  const chatId = msg.chat.id;

  try {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Firestore
    const testDoc = await db.collection('test').doc('status').get();
    const timestamp = new Date().toISOString();

    bot.sendMessage(chatId, `‚úÖ *–°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç*\n\nüïí –í—Ä–µ–º—è: ${timestamp}\nüîó Firestore: –ü–æ–¥–∫–ª—é—á–µ–Ω\nü§ñ –ë–æ—Ç: –ê–∫—Ç–∏–≤–µ–Ω`, { parse_mode: 'Markdown' });
  } catch (error) {
    console.error('Status check error:', error);
    bot.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞ —Å–∏—Å—Ç–µ–º—ã');
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on('message', (msg) => {
  console.log('üì® –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:', msg.text, '–æ—Ç', msg.from?.first_name);
});

// –≠–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è Firebase
exports.telegramBot = functions
  .runWith({
    timeoutSeconds: 540, // 9 –º–∏–Ω—É—Ç (–º–∞–∫—Å–∏–º—É–º –¥–ª—è Firebase Functions)
    memory: '1GB'
  })
  .https.onRequest(async (req, res) => {
    // –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å—Å—è –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞
    // –í Firebase Functions polling —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Ä–∞–º–∫–∞—Ö HTTP –∑–∞–ø—Ä–æ—Å–∞

    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –±–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω
      if (bot.isPolling()) {
        res.status(200).send('Bot is running and polling');
      } else {
        // –ï—Å–ª–∏ polling –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø—ã—Ç–∞–µ–º—Å—è –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å
        await bot.startPolling();
        res.status(200).send('Bot polling restarted');
      }
    } catch (error) {
      console.error('Bot initialization error:', error);
      res.status(500).send('Bot initialization failed');
    }
  });

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞
exports.keepAlive = functions
  .runWith({
    timeoutSeconds: 60,
    memory: '256MB'
  })
  .pubsub.schedule('every 5 minutes')
  .onRun(async (context) => {
    console.log('üîÑ Keep-alive check at', new Date().toISOString());

    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞
      if (!bot.isPolling()) {
        console.log('ü§ñ Restarting bot polling...');
        await bot.startPolling();
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Firestore
      const testRef = db.collection('system').doc('health');
      await testRef.set({
        lastCheck: admin.firestore.FieldValue.serverTimestamp(),
        status: 'healthy'
      });

      console.log('‚úÖ Bot and Firestore are healthy');
      return null;
    } catch (error) {
      console.error('‚ùå Keep-alive error:', error);
      throw new Error('Keep-alive check failed');
    }
  });